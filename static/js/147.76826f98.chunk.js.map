{"version":3,"file":"static/js/147.76826f98.chunk.js","mappings":"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","sources":["api/hooks/categories.mock.ts","api/hooks/products.mock.ts","api/hooks/user.mock.ts","api/hooks/wishList.mock.ts","mocks/browser.ts"],"sourcesContent":["import { rest } from 'msw';\r\n\r\ntype Category = {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  color: string;\r\n  imageUrl: string;\r\n};\r\n\r\n// 초기 카테고리 데이터\r\nconst CATEGORIES_RESPONSE_DATA: Category[] = [\r\n  {\r\n    id: 2920,\r\n    name: '생일',\r\n    description: '감동을 높여줄 생일 선물 리스트',\r\n    color: '#5949a3',\r\n    imageUrl:\r\n      'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Ft1.daumcdn.net%2Fgift%2Fhome%2Ftheme%2F292020231106_MXMUB.png',\r\n  },\r\n  {\r\n    id: 2930,\r\n    name: '교환권',\r\n    description: '놓치면 후회할 교환권 특가',\r\n    color: '#9290C3',\r\n    imageUrl:\r\n      'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Fst.kakaocdn.net%2Fproduct%2Fgift%2Fproduct%2F20240131153049_5a22b137a8d346e9beb020a7a7f4254a.jpg',\r\n  },\r\n];\r\n\r\n// Mock 데이터 저장소\r\nconst categories = [...CATEGORIES_RESPONSE_DATA];\r\n\r\nexport const categoriesMockHandler = [\r\n  // 카테고리 목록 조회\r\n  rest.get('https://api.example.com/api/categories', (_, res, ctx) => {\r\n    return res(ctx.status(200), ctx.json(categories));\r\n  }),\r\n\r\n  // 카테고리 생성\r\n \r\n\r\n  // 카테고리 수정\r\n  rest.put('https://api.example.com/api/categories/:categoryId', (req, res, ctx) => {\r\n    const { categoryId } = req.params as { categoryId: string };\r\n    const { name, description, color, imageUrl } = req.body as Category;\r\n\r\n    const categoryIndex = categories.findIndex((c) => c.id === parseInt(categoryId, 10));\r\n\r\n    if (categoryIndex === -1) {\r\n      return res(ctx.status(404), ctx.json({ error: '해당 카테고리를 찾을 수 없습니다.' }));\r\n    }\r\n\r\n    if (!name || !description || !color || !imageUrl) {\r\n      return res(\r\n        ctx.status(400),\r\n        ctx.json({ error: '모든 필드(name, description, color, imageUrl)가 필요합니다.' }),\r\n      );\r\n    }\r\n\r\n    categories[categoryIndex] = {\r\n      ...categories[categoryIndex],\r\n      name,\r\n      description,\r\n      color,\r\n      imageUrl,\r\n    };\r\n\r\n    return res(ctx.status(200), ctx.json(categories[categoryIndex]));\r\n  }),\r\n];\r\n","import { rest } from 'msw';\r\n\r\nimport { getProductDetailPath } from './useGetProductDetail';\r\nimport { getProductOptionsPath } from './useGetProductOptions';\r\nimport { getProductsPath } from './useGetProducts';\r\n\r\nexport const productsMockHandler = [\r\n  rest.get(\r\n    getProductsPath({\r\n      categoryId: '2920',\r\n    }),\r\n    (_, res, ctx) => {\r\n      return res(ctx.json(PRODUCTS_MOCK_DATA));\r\n    },\r\n  ),\r\n  rest.get(\r\n    getProductsPath({\r\n      categoryId: '2930',\r\n    }),\r\n    (_, res, ctx) => {\r\n      return res(ctx.json(PRODUCTS_MOCK_DATA));\r\n    },\r\n  ),\r\n  rest.get(getProductDetailPath(':productId'), (req, res, ctx) => {\r\n    const productId = req.params.productId;\r\n    const product = PRODUCTS_MOCK_DATA.content.find((item) => item.id === Number(productId));\r\n    return product ? res(ctx.json(product)) : res(ctx.status(404));\r\n  }),\r\n  rest.get(getProductOptionsPath(':productId'), (req, res, ctx) => {\r\n    const productId = req.params.productId;\r\n\r\n    const options = [\r\n      { id: 1, name: 'Option A', quantity: 10, productId: productId },\r\n      { id: 2, name: 'Option B', quantity: 20, productId: productId },\r\n    ];\r\n    return res(ctx.json(options));\r\n  }),\r\n];\r\n\r\nconst PRODUCTS_MOCK_DATA = {\r\n  content: [\r\n    {\r\n      id: 3245119,\r\n      name: '[단독각인] 피렌체 1221 에디션 오드코롱 50ml (13종 택1)',\r\n      imageUrl:\r\n        'https://st.kakaocdn.net/product/gift/product/20240215083306_8e1db057580145829542463a84971ae3.png',\r\n      price: 145000,\r\n    },\r\n    {\r\n      id: 2263833,\r\n      name: '외식 통합권 10만원권',\r\n      imageUrl:\r\n        'https://st.kakaocdn.net/product/gift/product/20200513102805_4867c1e4a7ae43b5825e9ae14e2830e3.png',\r\n      price: 100000,\r\n    },\r\n    {\r\n      id: 6502823,\r\n      name: '[선물포장/미니퍼퓸증정] 디켄터 리드 디퓨저 300ml + 메세지카드',\r\n      imageUrl:\r\n        'https://st.kakaocdn.net/product/gift/product/20240215112140_11f857e972bc4de6ac1d2f1af47ce182.jpg',\r\n      price: 108000,\r\n    },\r\n    {\r\n      id: 1181831,\r\n      name: '[선물포장] 소바쥬 오 드 뚜왈렛 60ML',\r\n      imageUrl:\r\n        'https://st.kakaocdn.net/product/gift/product/20240214150740_ad25267defa64912a7c030a7b57dc090.jpg',\r\n      price: 122000,\r\n    },\r\n    {\r\n      id: 1379982,\r\n      name: '[정관장] 홍삼정 에브리타임 리미티드 (10ml x 30포)',\r\n      imageUrl:\r\n        'https://st.kakaocdn.net/product/gift/product/20240118135914_a6e1a7442ea04aa49add5e02ed62b4c3.jpg',\r\n      price: 133000,\r\n    },\r\n  ],\r\n  number: 0,\r\n  totalElements: 5,\r\n  size: 10,\r\n  last: true,\r\n};\r\n","import { rest } from 'msw';\r\n\r\ntype Member = {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst members: Member[] = []; \r\n\r\nexport const authHandlers = [\r\n  rest.post<Member>('/api/members/register', (req, res, ctx) => {\r\n    const { email, password } = req.body;\r\n\r\n    if (!email || !password) {\r\n      return res(ctx.status(400), ctx.json({ message: 'Invalid input' }));\r\n    }\r\n\r\n    const existingMember = members.find(member => member.email === email);\r\n    if (existingMember) {\r\n      return res(ctx.status(400), ctx.json({ message: 'Email already exists' }));\r\n    }\r\n\r\n    const newMember = { email, password }; \r\n    members.push(newMember);\r\n\r\n    return res(ctx.status(201), ctx.json({\r\n      email: newMember.email,\r\n      token: 'fake-token', \r\n    }));\r\n  }),\r\n\r\n  rest.post<Member>('/api/members/login', (req, res, ctx) => {\r\n    const { email, password } = req.body;\r\n\r\n    if (!email || !password) {\r\n      return res(ctx.status(403), ctx.json({ message: 'Invalid email or password' }));\r\n    }\r\n\r\n    const findMember = members.find(member => member.email === email && member.password === password);\r\n    if (!findMember) {\r\n      return res(ctx.status(403), ctx.json({ message: 'Invalid email or password' }));\r\n    }\r\n\r\n    return res(ctx.status(200), ctx.json({\r\n      email: findMember.email,\r\n      token: 'fake-token', \r\n    }));\r\n  }),\r\n];\r\n","import { rest } from 'msw';\r\n\r\ntype WishRequest = {\r\n  productId: number;\r\n};\r\n\r\nexport const wishListMockHandler = [\r\n  rest.post('/api/wishes', (req, res, ctx) => {\r\n    const { productId } = req.body as WishRequest;\r\n\r\n    if (!productId) {\r\n      return res(ctx.status(400), ctx.json({ message: 'Invalid input' }));\r\n    }\r\n\r\n    const newWish = {\r\n      id: wishList.length + 1,\r\n      product: {\r\n        id: productId,\r\n        name: `Product ${productId}`,\r\n        price: 100,\r\n        imageUrl: 'https://st.kakaocdn.net/product/gift/product/20240703140657_19263fd5455146b0a308a4e0d6bacc6a.png',\r\n      },\r\n    };\r\n\r\n    wishList.push(newWish);\r\n\r\n    return res(ctx.status(201), ctx.json(newWish));\r\n  }),\r\n\r\n  rest.delete('/api/wishes/:wishId', (req, res, ctx) => {\r\n    const { wishId } = req.params;\r\n\r\n    const wishIndex = wishList.findIndex((wish) => wish.id === parseInt(wishId as string));\r\n\r\n    if (wishIndex === -1) {\r\n      return res(ctx.status(404), ctx.json({ message: 'Wish not found' }));\r\n    }\r\n\r\n    wishList.splice(wishIndex, 1);\r\n\r\n    return res(ctx.status(204));\r\n  }),\r\n\r\n  rest.get('/api/wishes', (_, res, ctx) => {\r\n    return res(ctx.status(200), ctx.json(wishList));\r\n  }),\r\n];\r\n\r\nconst wishList = [\r\n  {\r\n    id: 1,\r\n    product: {\r\n      id: 1,\r\n      name: 'Product A',\r\n      price: 100,\r\n      imageUrl: 'https://st.kakaocdn.net/product/gift/product/20240703140657_19263fd5455146b0a308a4e0d6bacc6a.png',\r\n    },\r\n  },\r\n  {\r\n    id: 2,\r\n    product: {\r\n      id: 2,\r\n      name: 'Product B',\r\n      price: 150,\r\n      imageUrl: 'https://st.kakaocdn.net/product/gift/product/20240703140657_19263fd5455146b0a308a4e0d6bacc6a.png',\r\n    },\r\n  },\r\n];\r\n","import { setupWorker } from 'msw';\r\n\r\nimport { categoriesMockHandler } from '@/api/hooks/categories.mock';\r\nimport { productsMockHandler } from '@/api/hooks/products.mock';\r\nimport { authHandlers } from '@/api/hooks/user.mock';\r\nimport { wishListMockHandler } from '@/api/hooks/wishList.mock';\r\n\r\nexport const worker = setupWorker(\r\n  ...categoriesMockHandler,\r\n  ...productsMockHandler,\r\n  ...wishListMockHandler,\r\n  ...authHandlers\r\n);\r\n"],"names":["categories","id","name","description","color","imageUrl","categoriesMockHandler","rest","get","_","res","ctx","status","json","put","req","categoryId","params","body","categoryIndex","findIndex","c","parseInt","error","productsMockHandler","getProductsPath","PRODUCTS_MOCK_DATA","getProductDetailPath","productId","product","content","find","item","Number","getProductOptionsPath","options","quantity","price","number","totalElements","size","last","members","authHandlers","post","email","password","message","member","newMember","push","token","findMember","wishListMockHandler","newWish","wishList","length","concat","delete","wishId","wishIndex","wish","splice","worker","setupWorker"],"sourceRoot":""}